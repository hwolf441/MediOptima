{
	"Query Handler": {
		"prefix": "qhanhler",
		"body": [
		  "   public class Query: IRequest<${1:ReturnObject}>",
		  "     {",
		  "",
		  "     }",
		  "        public class Handler : IRequestHandler<Query, ${1:ReturnObject}>",
		  "        {",
		  "        private readonly DataContext _context;",
		  "            public Handler(DataContext context)",
		  "            {",
		  "            _context = context;",
		  "            }",
		  "",
		  "            public Task<${1:ReturnObject}> Handle(Query request, CancellationToken cancellationToken)",
		  "            {",
		  "               //handler logic goes here",
		  "            }",
		  "        }"
		],
		"description": "Query Handler"
	  },
	  "Command Handler": {
		"prefix": "chanhler",
		"body": [
		  " public class Command: IRequest ",
		  "       {",
		  "        public string? Title { get; set; }",
		  "        public string? Author { get; set; }",
		  "        public string? Content  { get; set; }",
		  "        public string? Category { get; set; }",
		  "        public string? Comments { get; set; }",
		  "        public DateTime CreatedAt { get; set; }",
		  "        public Boolean Is_Published { get; set; }",
		  "       }",
		  "        public class Handler : IRequestHandler<Command>",
		  "        {",
		  "        public DataContext Context { get; }",
		  "            public Handler(DataContext context)",
		  "            {",
		  "            Context = context;",
		  "            }",
		  "",
		  "            public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
		  "            {",
		  "                var blog = new Blog",
		  "                {",
		  "                     Title = request.Title,",
		  "                     Author= request.Author,",
		  "                     Content = request.Content,",
		  "                     Category = request.Category,",
		  "                     Comments = request.Comments,",
		  "                     CreatedAt = request.CreatedAt,",
		  "                     Is_Published = request.Is_Published,",
		  "                };",
		  "                Context.Blog.Add(blog);",
		  "                var success = await Context.SaveChangesAsync()>0;",
		  "                if (success)return Unit.Value;",
		  "                throw new Exception(\"Problem saving changes\");",
		  "            }",
		  "        }"
		],
		"description": "Command Handler"
	  }
}